/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import domino.Ficha;
import dto.FichaDTO;
import dto.Orientacion;
import draw.FichaDraw;
import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class PanelFichas extends javax.swing.JPanel {

    private FichaDraw fichaDraw;
    private List<FichaDTO> fichas = new ArrayList<>();
    private FichaDTO fichaSeleccionada;

    /**
     * Creates new form NewJPanel
     */
    public PanelFichas() {
        initComponents();
        Ficha ficha = new Ficha(6, 5);
        //ficha horizontal
        int x = 200;
        int y = 200;
        fichas.add(new FichaDTO(ficha, x, y, Orientacion.HORIZONTAL));
        //ficha vertical
        x = 400;
        y = 400;
        Ficha ficha2 = new Ficha(1, 5);
        fichas.add(new FichaDTO(ficha2, x, y, Orientacion.VERTICAL));
        x = 500;
        y = 400;
        Ficha ficha3 = new Ficha(2, 3);
        fichas.add(new FichaDTO(ficha3, x, y, Orientacion.VERTICAL));
        x = 350;
        y = 200;
        Ficha ficha4 = new Ficha(2, 5);
        fichas.add(new FichaDTO(ficha4, x, y, Orientacion.HORIZONTAL));
        x = 550;
        y = 200;
        Ficha ficha5 = new Ficha(3, 5);
        fichas.add(new FichaDTO(ficha5, x, y, Orientacion.HORIZONTAL));
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);

        this.fichaDraw = new FichaDraw(50);

        for (int i = 0; i < fichas.size(); i++) {
            fichaDraw.dibujarFicha(fichas.get(i), g);
        }

        if (fichaSeleccionada != null) {
            int xFichaSeleccionada = fichaSeleccionada.getX();
            int yFichaSeleccionada = fichaSeleccionada.getY();
            g.setColor(Color.RED);
            g.drawRoundRect(xFichaSeleccionada, yFichaSeleccionada,
                    fichaDraw.getDimensionCuadrado(), fichaDraw.getDimensionCuadrado(), 6, 6);
            if (fichaSeleccionada.getOrientacion().equals(Orientacion.HORIZONTAL)) {
                xFichaSeleccionada = fichaSeleccionada.getX() + 50;
                g.drawRoundRect(xFichaSeleccionada, yFichaSeleccionada,
                        fichaDraw.getDimensionCuadrado(), fichaDraw.getDimensionCuadrado(), 6, 6);
            } else {
                yFichaSeleccionada = fichaSeleccionada.getY() + 50;
                g.drawRoundRect(xFichaSeleccionada, yFichaSeleccionada,
                        fichaDraw.getDimensionCuadrado(), fichaDraw.getDimensionCuadrado(), 6, 6);
            }

        }
    }

    private void seleccionarFicha(int x, int y) {
        for (FichaDTO ficha : fichas) {
//            int xFicha = 400 + fichas.indexOf(ficha) * 100;
//            int yFicha = 400;
            int xFicha = ficha.getX();
            int yFicha = ficha.getY();

            if (ficha.getOrientacion().equals(Orientacion.HORIZONTAL)) {
                if (y >= yFicha && y <= yFicha + fichaDraw.getDimensionCuadrado()
                        && x >= xFicha && x <= xFicha + 2 * fichaDraw.getDimensionCuadrado()) {
                    fichaSeleccionada = ficha;
                    repaint();
                    System.out.println("Ficha seleccionada: " + ficha);
                    break;
                }
            } else if (ficha.getOrientacion().equals(Orientacion.VERTICAL)) {
                if (x >= xFicha && x <= xFicha + fichaDraw.getDimensionCuadrado()
                        && y >= yFicha && y <= yFicha + 2 * fichaDraw.getDimensionCuadrado()) {
                    fichaSeleccionada = ficha;
                    repaint();
                    System.out.println("Ficha seleccionada: " + ficha);
                    break;
                }
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(153, 153, 153));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        seleccionarFicha(evt.getX(), evt.getY());
// TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
